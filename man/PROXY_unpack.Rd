% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PROXY_unpack.R
\name{PROXY_unpack}
\alias{PROXY_unpack}
\title{Unpack Proxy Strings into Platform‐Specific Formats}
\usage{
PROXY_unpack(
  proxy_full,
  template = "{host}:{port}:{user}:{pass}",
  platform = c("R", "scrapling")
)
}
\arguments{
\item{proxy_full}{Character(1). The raw proxy string (e.g. "user:pass@host:port").}

\item{template}{Character(1). A template specifying the format using
placeholders in curly braces, e.g. "{user}:{pass}@{host}:{port}".}

\item{platform}{Character(1). Either "R" (returns an \code{httr::use_proxy})
or "scrapling" (returns a \code{list(server, username, password)}).}
}
\value{
For platform = "R", an \code{httr::use_proxy()} object; for platform =
"scrapling", a named list with components \code{server}, \code{username}, \code{password}.
}
\description{
Parses a proxy definition string according to a user‐defined template and
returns either an \code{httr::use_proxy()} object for R or a list suitable for
Python/Scrapling. Supports arbitrary order and delimiters via templates.
}
\examples{
PROXY_unpack("alice:pw@10.0.0.1:8080",
              template = "{user}:{pass}@{host}:{port}",
              platform = "R")
PROXY_unpack("10.0.0.1:8080:alice:pw",
               template = "{host}:{port}:{user}:{pass}",
              platform = "scrapling")
}
