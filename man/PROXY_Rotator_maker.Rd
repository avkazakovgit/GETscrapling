% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PROXY_Rotator_maker.R
\name{PROXY_Rotator_maker}
\alias{PROXY_Rotator_maker}
\title{Create a Rotating Proxy Pool Selector}
\usage{
PROXY_Rotator_maker(
  proxies,
  n_pools = NULL,
  pool_size = NULL,
  interval_secs = 0
)
}
\arguments{
\item{proxies}{Character vector of raw proxy strings (e.g. \"user:pass@host:port\").}

\item{n_pools}{Integer >= 1 or \code{NULL}. Number of sub‐pools to cycle through.
Must be \emph{exactly one} of \code{n_pools} or \code{pool_size}.}

\item{pool_size}{Integer >= 1 or \code{NULL}. If you have a single proxy provider
but need, say, 5 concurrent connections, set \code{pool_size = 5}. Must be
exactly one of \code{n_pools} or \code{pool_size}.}

\item{interval_secs}{Numeric >= 0. Minimum seconds between rotations.}
}
\value{
A zero‐argument function. Each time you call it, you get back a
character vector of proxies appropriate for that “tick.”  Internally it
advances to the next pool only when \code{interval_secs} have elapsed.
}
\description{
Given a vector of proxy addresses, returns a function that, on each call,
yields one “pool” of proxies—cycling through sub‐pools at a fixed time
interval.  You can either split your proxies into \code{n_pools} equally‐sized
chunks, or request a \code{pool_size} (for single‐proxy providers).
}
\examples{
# Round‐robin across 3 sub‐pools:
rot <- make_proxy_rotator(proxies = paste0(\"p\", 1:12), n_pools = 3, interval_secs = 10)
rot()  # first 4 proxies
Sys.sleep(10); rot()  # next 4

# Single peer provider but need 5 simultaneous connections:
rot2 <- make_proxy_rotator(proxies = \"single:provider:credentials\", pool_size = 5)
rot2()  # returns rep(\"single:provider:credentials\", 5)

}
